1.
SELECT
	*
FROM
	INFORMATION_SCHEMA.COLUMNS
WHERE	
	table_name = 'naep'

2.
SELECT
	*
FROM
	naep
LIMIT 50

3.
SELECT
	naep.state,
	COUNT(avg_math_4_score),
	AVG(avg_math_4_score),
	MIN(avg_math_4_score),
	MAX(avg_math_4_score)
FROM
	naep
GROUP BY
	naep.state
ORDER BY	
	naep.state

4.
SELECT
	naep.state,
	COUNT(avg_math_4_score),
	AVG(avg_math_4_score),
	MIN(avg_math_4_score),
	MAX(avg_math_4_score)
FROM	
	naep
GROUP BY
	naep.state
HAVING
	MAX(avg_math_4_score) - MIN(avg_math_4_score) > 30
ORDER BY
	naep.state

5.
SELECT
	naep.state AS bottom_10_states,
	AVG(avg_math_4_score) AS avg_math
FROM
	naep
WHERE
	naep.year = 2000
GROUP BY	
	naep.state
ORDER BY
	avg_math ASC
LIMIT 10

6.
SELECT
	ROUND(AVG(avg_math_4_score), 2) AS avg_math
FROM
	naep
WHERE
	naep.year = 2000

7.
SELECT
	naep.state AS below_average_states_y2000,
	AVG(avg_math_4_score) AS avg_math
FROM
	naep
WHERE
	naep.year = 2000
GROUP BY
	naep.state
HAVING
	AVG(avg_math_4_score) < (
	SELECT
		ROUND(AVG(avg_math_4_score), 2) AS avg_math
	FROM
		naep
	WHERE
		naep.year = 2000
)

8.
SELECT
	naep.state AS scores_missing_y2000
FROM
	naep
WHERE
	naep.year = 2000
GROUP BY
	naep.state
HAVING
	AVG(avg_math_4_score) IS NULL

9.
SELECT
	naep.state,
	ROUND(naep.avg_math_4_score, 2) AS avg_math_4_score,
	finance.total_expenditure
FROM
	naep
LEFT JOIN
	finance
ON
	naep.id = finance.id
WHERE
	naep.year = 2000
	AND naep.avg_math_4_score IS NOT NULL
ORDER BY
	total_expenditure ASC